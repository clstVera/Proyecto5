{"version":3,"sources":["components/Crud.jsx","App.js","index.js"],"names":["Crud","useState","tasks","setTasks","title","setTitle","description","setDescription","edit","setEdit","clear","localStorage","className","onSubmit","e","preventDefault","id","getItem","newTask","newTasks","map","item","updateTask","task","uuid","addTask","type","placeholder","value","required","autoFocus","onChange","target","onClick","Swal","fire","text","icon","showCancelButton","confirmButtonColor","cancelButtonColor","confirmButtonText","then","result","isConfirmed","filter","showConfirmButton","timer","data","setItem","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2OA4GeA,EAxGF,WAAO,IAAD,EAEWC,mBAAS,IAFpB,mBAERC,EAFQ,KAEDC,EAFC,OAGWF,mBAAS,IAHpB,mBAGRG,EAHQ,KAGDC,EAHC,OAIuBJ,mBAAS,IAJhC,mBAIRK,EAJQ,KAIKC,EAJL,OAKSN,oBAAS,GALlB,mBAKRO,EALQ,KAKFC,EALE,OAMiBR,mBAAS,CAAEG,MAAO,GAAIE,YAAa,KANpD,mBA0DTI,GA1DS,UA0DD,WACVL,EAAS,IACTE,EAAe,IACfE,GAAQ,GACRE,aAAaD,UAGjB,OACI,sBAAKE,UAAU,YAAf,UACI,qBAAKA,UAAU,wDAAf,SACI,qBAAKA,UAAU,QAAf,SACI,sBAAKA,UAAU,OAAf,UACI,oBAAIA,UAAU,yBAAd,kBACA,qBAAKA,UAAU,YAAf,SACI,uBAAMC,SAlDd,SAACC,GACbA,EAAEC,iBACFP,EAVe,WACf,IAAMQ,EAAKL,aAAaM,QAAQ,MAC1BC,EAAU,CAAEF,KAAIZ,QAAOE,eACvBa,EAAWjB,EAAMkB,KAAI,SAAAC,GAAI,OAAIA,EAAKL,KAAOA,EAAKE,EAAUG,KAC9DlB,EAASgB,GACTT,IAKOY,GAhBK,WACZ,IAAMC,EAAO,CAAEP,GAAIQ,MAAQpB,QAAOE,eAClCH,EAAS,GAAD,mBAAKD,GAAL,CAAYqB,KACpBb,IAasBe,IAgDF,UACI,qBAAKb,UAAU,OAAf,SACI,uBAAOc,KAAK,OAAOC,YAAY,QAAQC,MAAOxB,EAAOyB,UAAQ,EAACC,WAAS,EAAClB,UAAU,eAAemB,SAAU,SAACjB,GAAD,OAAOT,EAASS,EAAEkB,OAAOJ,YAExI,qBAAKhB,UAAU,OAAf,SACI,uBAAOc,KAAK,OAAOC,YAAY,cAAcC,MAAOtB,EAAauB,UAAQ,EAACjB,UAAU,eAAemB,SAAU,SAACjB,GAAD,OAAOP,EAAeO,EAAEkB,OAAOJ,YAEhJ,wBAAQhB,UAAU,+BAA+Bc,KAAK,SAAtD,8BAMpB,oBAAId,UAAU,iCAAd,SAEQV,EAAMkB,KAAI,SAACG,GAAD,OACN,qBAAIX,UAAU,mEAAd,UACI,sBAAKA,UAAU,eAAf,UACI,qBAAKA,UAAU,UAAf,SAA0BW,EAAKnB,QAC9BmB,EAAKjB,eAEV,wBAAQM,UAAU,sBAAsBqB,QAAS,kBAlErDjB,EAkEsEO,EAAKP,QAjE3FkB,IAAKC,KAAK,CACN/B,MAAO,gBACPgC,KAAM,oCACNC,KAAM,UACNC,kBAAkB,EAClBC,mBAAoB,UACpBC,kBAAmB,OACnBC,kBAAmB,oBACpBC,MAAK,SAACC,GACL,GAAIA,EAAOC,YAAa,CACpB,IAAM1B,EAAUhB,EAAM2C,QAAO,SAAAtB,GAAI,OAAIA,EAAKP,KAAOA,KACjDb,EAASe,GACTgB,IAAKC,KAAK,CACN/B,MAAO,WACPgC,KAAM,8BACNC,KAAM,UACNS,mBAAmB,EACnBC,MAAO,WAlBJ,IAAC/B,GAkEI,SAA4E,mBAAGJ,UAAU,mBACzF,wBAAQA,UAAU,kBAAkBqB,QAAS,kBA3CpDe,EA2CkEzB,EA1C/EZ,aAAasC,QAAQ,KAAMD,EAAKhC,IAChCX,EAAS2C,EAAK5C,OACdG,EAAeyC,EAAK1C,kBACpBG,GAAQ,GAJI,IAACuC,GA2CO,SAAkE,mBAAGpC,UAAU,oBANGW,EAAKP,aClFpGkC,MARf,WACE,OACE,qBAAKtC,UAAU,MAAf,SACE,cAAC,EAAD,OCANuC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.445fe471.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\nimport uuid from 'react-uuid';\r\nimport Swal from 'sweetalert2';\r\n\r\nconst Crud = () => {\r\n\r\n    const [tasks, setTasks] = useState([]);\r\n    const [title, setTitle] = useState('');\r\n    const [description, setDescription] = useState('');\r\n    const [edit, setEdit] = useState(false);\r\n    const [taskData, setTaskData] = useState({ title: '', description: '' })\r\n\r\n    const addTask = () => {\r\n        const task = { id: uuid(), title, description }\r\n        setTasks([...tasks, task]);\r\n        clear();\r\n    }\r\n\r\n    const updateTask = () => {\r\n        const id = localStorage.getItem('id');\r\n        const newTask = { id, title, description };\r\n        const newTasks = tasks.map(item => item.id === id ? newTask : item);\r\n        setTasks(newTasks);\r\n        clear();\r\n    }\r\n\r\n    const actions = (e) => {\r\n        e.preventDefault();\r\n        edit ? updateTask() : addTask();\r\n    }\r\n\r\n    const deleteTask = (id) => {\r\n        Swal.fire({\r\n            title: 'Are you sure?',\r\n            text: \"You won't be able to revert this!\",\r\n            icon: 'warning',\r\n            showCancelButton: true,\r\n            confirmButtonColor: '#3085d6',\r\n            cancelButtonColor: '#d33',\r\n            confirmButtonText: 'Yes, delete it!'\r\n        }).then((result) => {\r\n            if (result.isConfirmed) {\r\n                const newTask = tasks.filter(task => task.id !== id);\r\n                setTasks(newTask);\r\n                Swal.fire({\r\n                    title: 'Deleted!',\r\n                    text: 'Your file has been deleted.',\r\n                    icon: 'success',\r\n                    showConfirmButton: false,\r\n                    timer: 1500,\r\n                })\r\n            }\r\n        })\r\n    }\r\n\r\n    const getData = (data) => {\r\n        localStorage.setItem('id', data.id)\r\n        setTitle(data.title);\r\n        setDescription(data.description);\r\n        setEdit(true);\r\n    }\r\n\r\n    const clear = () => {\r\n        setTitle('');\r\n        setDescription('');\r\n        setEdit(false);\r\n        localStorage.clear();\r\n    }\r\n\r\n    return (\r\n        <div className='container'>\r\n            <div className='mt-5 d-flex justify-content-center align-items-center'>\r\n                <div className='col-6'>\r\n                    <div className='card'>\r\n                        <h3 className='card-title text-center'>CRUD</h3>\r\n                        <div className='card-body'>\r\n                            <form onSubmit={actions}>\r\n                                <div className='mb-3'>\r\n                                    <input type='text' placeholder='Title' value={title} required autoFocus className='form-control' onChange={(e) => setTitle(e.target.value)} />\r\n                                </div>\r\n                                <div className='mb-3'>\r\n                                    <input type='text' placeholder='Description' value={description} required className='form-control' onChange={(e) => setDescription(e.target.value)} />\r\n                                </div>\r\n                                <button className='btn btn-primary form-control' type='submit'>Save</button>\r\n                            </form>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <ul className=\"list-group list-group-numbered\">\r\n                {\r\n                    tasks.map((task) => (\r\n                        <li className=\"list-group-item d-flex justify-content-between align-items-start\" key={task.id}>\r\n                            <div className=\"ms-2 me-auto\">\r\n                                <div className=\"fw-bold\">{task.title}</div>\r\n                                {task.description}\r\n                            </div>\r\n                            <button className='btn btn-danger me-2' onClick={() => deleteTask(task.id)}><i className=\"fas fa-trash\" ></i></button>\r\n                            <button className='btn btn-warning' onClick={() => getData(task)}><i className=\"fas fa-edit\" ></i></button>\r\n                        </li>\r\n                    ))\r\n                }\r\n\r\n            </ul>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Crud\r\n","import Crud from \"./components/Crud\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Crud></Crud>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}